(()=>{"use strict";var e={2918:function(e,t,r){var i,n=r(5893),a=r(7294),o=r(745),s=r(8106),l=r(9719),p=r(7884),c=r(483),d=r(7230),m=r(6881);let u={prompt:`
  # Role\xa0and\xa0Objective

You're an experienced optometrician who has to has to type a prescription into an application following a specific format. After finding a pattern and understanding values in the prescriptions, please, put the proper values into a JSON-file accodrding to a given JSON-schema. 

Available langauges:
1. French (primary)
2. English (secondary)
3. Latin (secondary)
4. Any other (fallback)
  
# Instructions

## Sub-categories\xa0for\xa0more\xa0detailed\xa0instructions 
1. Synonym is a way to name a parameter in prescription. I.e. 'right eye' can be named 'Œil droit', 'OD', but only one way per parameter.

### Obligatory

| parameter                          | synonym                                                                                                                                           | value_hints                                                                                                                                                            |
| ---------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| right eye                          | Œil droit, OD, oculus dexter                                                                                                                      | put values after this into 'right' parameters of the JSON.                                                                                                             |
| left eye                           | Œil gauche, OG, oculus sinister                                                                                                                   | put values after this into 'left' parameters of the JSON.                                                                                                              |
| both eyes                          | Œil Utile, OU, oculus uterque                                                                                                                     | If found, put same value into left and right parts of JSON.                                                                                                            |
| rightSphere, leftSphere            | SPH, S, Sph\xe8re                                                                                                                                    | from -20 to +20, if 0 can be missing or identified as 'plan'                                                                                                           |
| rightCylinder, leftCylinder        | CYL, C, cylindre, cylinder                                                                                                                        | from -10 to 0                                                                                                                                                          |
| leftAxis,<br>rightAxis             | AXE, Ax, axis                                                                                                                                     | 0 to 180. May be followed with \xb0 or * sign. If not present, then put zero.                                                                                             |
| leftVisionType,<br>rightVisionType | VL, hyperm\xe9tropie, de loin, vision de loin, far vision, distance vision; VP, myopia, de pres, vision de pres, near vision;                        | Put values 'VL', 'VP'<br>                                                                                                                                              |
| prescriberFullName                 | Nom du prescripteur, Prescriber Name, Prescriber Full Name, Doctor, Prescribed by, Ophthalmologist, ophtalmologiste, Dr en ophtalmologie, Docteur | May start with "madame", 'monsieur' or other similar words. skip the "starting word". most likey is located on top. Most likely will be placed on the top of the page. |
| prescriberEmail                    | Prescriber email, email                                                                                                                           | Will be placed near 'prescriber name'.                                                                                                                                 |
| prescriberAddress                  | Adresse du cabinet, Address                                                                                                                       | Contains city, Street, building number, and zip-code. Will be placed near 'prescriber name'.                                                                           |
| prescribedAt                       | Date de prescription, Date, valable                                                                                                               | output format 'YYYY - MM - DD'                                                                                                                                             |
| patientFirstName                   |                                                                                                                                                   | Patient's first name                                                                                                                                                   |
| patientLastName                    |                                                                                                                                                   | Patient's last name                                                                                                                                                    |


### Optional

| parameter           | synonym                                         | value_hints                                                                                                                                                                               |
| ------------------- | ----------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| rightAdd, leftAdd   | ADD, add, addition                              | From 0 to 4. IF not present, put zero.                                                                                                                                                    |
| expirationDate      | valid to                                        | output format YYYY-MM-DD                                                                                                                                                                  |
| treatment           | amincis entireflets, filtre lumiere, sunsensors | may name filters on the lenses (sun sensors, blue light) or other.                                                                                                                        |
| leftDeg, rightDeg   | DEG, degression                                 | Deg can be from 0 to 360. The degree symbol (\xb0) is sometimes shown next to the degression, sometimes omitted.                                                                             |
| leftBase, rightBase | base, Direction de la base, base direction      | If deg is missing there may be present base with values (IN or BASE NASALE, OUT or BASE TEMPORALE, UP or BASE SUP\xc9RIEURE, DOWN or BASE INF\xc9RIEURE)                                        |
| tint                | tint, teinte, colour                            | Just colour indentification. I.e. "teinte", "Sunsensors", "solaire", "Cat\xe9gorie solaire"                                                                                                  |
| pd                  | PD, \xe9cart pupillaire, EP, pupillary distance    | Simple number may be followed by "mm" or " mm". Pupillary Distance (PD) or \xe9cart pupillaire is added in mm. If values for left/right eyes are different, then add proper numbers in JSON. |
| VA                  | VA, Acuit\xe9 Visuelle                             |                                                                                                                                                                                           |
| patientBirthdate    |                                                 | output format 'YYYY - MM - DD'                                                                                                                                                                |
| adeliNumber         | Syst\xe8me d’Automatisation Des Listes             | follow '^ $|^ 0 ?\\d{ 9 } $'; example value: '0759876543'                                                                                                                                      |
| eip                 |                                                 |                                                                                                                                                                                           |

# Reasoning\xa0Steps

1. If a field is not available, just put 0 in it.
2. Handle ambiguities or unreadable text by making reasonable assumptions or noting the uncertainty.
3. Sometimes we can have a few prescriptions on the image, you should put all these prescriptions in the result array
# Output\xa0Format

1. Use  JSON schema provided to 'client.chat.complete API' as an output format.
# Examples  
| pattern                     | example                                                                                                       |
| --------------------------- | ------------------------------------------------------------------------------------------------------------- |
| Sphere (Cylinder) Axis\xb0     | OD +1.00 (-0.50) 180\xb0; <br>Sphere can be empty or marked as plan, eg. (-0.75) 45\xb0                             |
| Sphere (Cylinder Axis\xb0) Add | OG +2.00 (-0.75 90\xb0) Add +2.50<br>Sphere can be empty or marked as plan, eg. Plan (-0.50) 90\xb0 OR (-1.00 180\xb0) |
| Sphere / Cylinder Ax Add    | Left Eye +1.25 / -0.50 Ax 135 Add +2.00<br>Sphere can be empty or marked as plan.                             |
| (Axis\xb0 Cylinder) Sphere Add | (90\xb0 -1.00) +1.50 Add +2.00                                                                                   |
  
# Context  
  
# Final\xa0instructions\xa0and\xa0prompt\xa0to\xa0think\xa0step\xa0by\xa0step

1. Read the prescription.
2. Get prescription text from the prescription.
3. Match prescription to a pattern in example.
4. Put values from pattern into JSON file according to a schema.
5. Respond only with a valid JSON array with objects conforming to the provided format.
  `,schemaFile:new File([JSON.stringify(JSON.parse('{"$schema":"http://json-schema.org/draft-07/schema#","title":"PrescriptionList","description":"A list of glasses prescriptions.","type":"array","items":{"title":"Prescription","description":"Schema for structuring glasses prescription information based on instructions.","type":"object","properties":{"patient":{"type":"object","description":"Information about the patient.","properties":{"firstName":{"type":"string","description":"Patient\'s first name."},"lastName":{"type":"string","description":"Patient\'s last name."},"birthdate":{"type":"string","description":"Patient\'s birth date in YYYY-MM-DD format."}},"required":["firstName","lastName"]},"prescriber":{"type":"object","description":"Information about the prescriber.","properties":{"fullName":{"type":"string","description":"Full name of the prescriber/doctor."},"email":{"type":"string","description":"Prescriber\'s email address."},"address":{"type":"string","description":"Address of the prescriber\'s office."},"adeliNumber":{"type":"string","description":"ADELI identification number, format: 0-9 digits.","pattern":"^$|^0?\\\\d{9}$"}},"required":["fullName"]},"prescription":{"type":"object","description":"Details of the prescription.","properties":{"prescribedAt":{"type":"string","description":"Date when prescription was issued in YYYY-MM-DD format."},"expirationDate":{"type":"string","description":"End date of validity period in YYYY-MM-DD format."},"right":{"type":"object","description":"Prescription for right eye (OD - Œil droit).","properties":{"visionType":{"type":"string","enum":["VL","VP"],"description":"Type of vision correction: VL (far vision), VP (near vision)."},"sphere":{"type":"number","description":"Spherical correction, range from min to max.","minimum":-20,"max":20},"cylinder":{"type":"number","description":"Cylindrical correction, range from minimum to maximum.","minimum":-10,"maximum":0},"axis":{"type":"number","description":"Axis value, range from minimum to maximum.","minimum":0,"maximum":180},"add":{"type":"number","description":"Addition value, range from minimum to maximum.","minimum":0,"maximum":4},"deg":{"type":"number","description":"Degression value, range from minimum to maximum.","minimum":0,"maximum":360},"base":{"type":"string","enum":["IN","OUT","UP","DOWN"],"description":"Direction of the base."},"pd":{"type":"number","description":"Pupillary distance in mm for right eye."},"va":{"type":"string","description":"Visual acuity for right eye."}},"required":["visionType","sphere","cylinder","axis"]},"left":{"type":"object","description":"Prescription for left eye (OG - Œil gauche).","properties":{"visionType":{"type":"string","enum":["VL","VP"],"description":"Type of vision correction: VL (far vision), VP (near vision)."},"sphere":{"type":"number","description":"Spherical correction, range from -20 to +20."},"cylinder":{"type":"number","description":"Cylindrical correction, range from -10 to 0."},"axis":{"type":"number","description":"Axis value, range from 0 to 180."},"add":{"type":"number","description":"Addition value, range from 0 to 4."},"deg":{"type":"number","description":"Degression value, range from 0 to 360."},"base":{"type":"string","enum":["IN","OUT","UP","DOWN"],"description":"Direction of the base."},"pd":{"type":"number","description":"Pupillary distance in mm for left eye."},"va":{"type":"string","description":"Visual acuity for left eye."}},"required":["visionType","sphere","cylinder","axis"]},"treatment":{"type":"string","description":"Special treatments or filters for lenses."},"tint":{"type":"string","description":"Color or tint applied to lenses."}},"required":["prescribedAt","right","left"]}},"required":["patient","prescriber","prescription"]}}'))],"prescription-schema.json",{type:"application/json"}),targetFile:null};var f=((i={}).Success="success",i.Error="error",i),h=r(6775),y=r(7361),g=r.n(y),b=r(6595);let x=async e=>{let t=await fetch(e);if(!t.ok)throw console.error(`Failed to fetch the file: ${e}`),Error("Failed to fetch the file");let r=t.headers.get("content-type");return r?b.Z.getExtension(r):null},v=new h.Mistral({apiKey:"diGcUz0gZW5uNlMbXIktFfDimm30ca3D"}),j=async e=>{let t=await x(e);switch(t){case"pdf":return{type:"document_url",documentUrl:e};case"png":case"jpg":case"jpeg":return{type:"image_url",imageUrl:e};default:throw Error(`Unsupported file type - ${t}`)}},w={extractFileContent:async e=>{var t;let r=await j(e);return(null==(t=(await v.ocr.process({model:"mistral-ocr-latest",document:r,includeImageBase64:!0})).pages[0])?void 0:t.markdown)||null},run:async e=>{let{prompt:t,schema:r=null,fileContent:i=null}=e,n=[{type:"text",text:t}];r&&n.push({type:"text",text:`### Output Format (JSON Schema): ${r}`}),i&&(console.info(i),n.push({type:"text",text:`### File content in Markdown: ${i}`}));try{let e=await v.chat.complete({model:"mistral-small-latest",messages:[{role:"user",content:n}]});return g()(e,"choices[0].message.content")}catch(e){throw Error(`Error processing image: ${e.message}`)}}},O={mistral:w},S=(e=>{if(!O[e])throw Error(`Strategy ${e} not found`);return O[e]})("mistral"),A={extractFileContent:w.extractFileContent,run:S.run};Object.freeze(A);let P=e=>{let t=new FileReader;return new Promise((r,i)=>{t.readAsDataURL(e),t.onload=()=>r(t.result),t.onerror=e=>i(e)})},D=async e=>{let t=new FileReader;return new Promise((r,i)=>{t.readAsText(e),t.onload=()=>r(t.result),t.onerror=e=>i(e)})},E=async e=>{let{prompt:t,schemaFile:r,fileURL:i,targetFile:n}=e,a=(null==r?void 0:r.name)?await D(r):null,o=(null==n?void 0:n.name)?await P(n):i;try{if(!t||!o)throw Error("Please provide all required data");let e=await A.extractFileContent(o);await new Promise(e=>setTimeout(e,1e3));let r=await A.run({prompt:t,schema:a,fileContent:e});if(!r)throw Error("No data found");return{status:f.Success,message:r}}catch(e){return{status:f.Error,message:e.message}}};var F=r(1035),N=r(9599),C=r(7454);let I=e=>{let{defaultValue:t=[],setFile:r}=e,[i,n]=(0,a.useState)(t),o=(0,a.useRef)(null);(0,a.useEffect)(()=>{i.length?r(i[0]):r(null)},[i]),(0,a.useEffect)(()=>{if(i.length){let e=new DataTransfer;i.map(t=>e.items.add(t)),o.current.files=e.files}else o.current.value=""},[i]),(0,a.useEffect)(()=>{let e=o.current;return e.addEventListener("change",s),e.addEventListener("cancel",l),()=>{e.removeEventListener("change",s),e.removeEventListener("cancel",l)}},[]);let s=e=>{let t=e.target.files;t&&t.length>0?n(Array.from(t)):n([])},l=()=>{n([])};return{files:i,handleChange:s,handleRemove:e=>()=>{n(i.filter(t=>t.name!==e.name))},fileInputRef:o}},L=e=>{let t=URL.createObjectURL(e),r=document.createElement("a");r.href=t,r.download=e.name,document.body.appendChild(r),r.click(),document.body.removeChild(r),URL.revokeObjectURL(t)},Y=e=>{let{defaultValue:t,setFile:r}=e,{files:i,fileInputRef:a,handleRemove:o}=I({defaultValue:[t],setFile:r});return(0,n.jsxs)(l.Z,{direction:"row",spacing:2,marginBottom:2,children:[(0,n.jsxs)(d.Z,{component:"label",variant:"contained",tabIndex:-1,sx:{width:200,height:55},children:["Choose schema",(0,n.jsx)("input",{style:{display:"none"},type:"file",name:"schemaFile",accept:"application/json",ref:a})]}),null==i?void 0:i.map(e=>(0,n.jsxs)(l.Z,{direction:"row",alignItems:"center",gap:2,children:[(0,n.jsx)("strong",{children:e.name}),(0,n.jsxs)(l.Z,{direction:"row",children:[(0,n.jsx)(F.Z,{"aria-label":"delete",onClick:()=>L(e),color:"primary",children:(0,n.jsx)(N.Z,{})}),(0,n.jsx)(F.Z,{"aria-label":"delete",onClick:o(e),color:"primary",children:(0,n.jsx)(C.Z,{})})]})]},e.name))]})},k=e=>{let{defaultValue:t,setFile:r}=e,{files:i,fileInputRef:a,handleRemove:o}=I({defaultValue:t?[t]:[],setFile:r});return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(l.Z,{direction:"row",spacing:2,children:[(0,n.jsx)(c.Z,{fullWidth:!0,disabled:i.length,type:"url",name:"fileURL",label:"URL"}),(0,n.jsxs)(d.Z,{component:"label",variant:"contained",tabIndex:-1,sx:{width:200,height:55},children:["Choose file",(0,n.jsx)("input",{style:{display:"none"},type:"file",name:"targetFile",accept:"image/*,application/pdf",ref:a})]})]}),null==i?void 0:i.map(e=>(0,n.jsxs)(l.Z,{direction:"row",alignItems:"center",gap:1,children:[(0,n.jsx)("strong",{children:e.name}),(0,n.jsx)(F.Z,{"aria-label":"delete",onClick:o(e),color:"primary",children:(0,n.jsx)(C.Z,{})})]},e.name))]})};var M=r(7245),U=r(6847);let R=(0,U.ZP)("div")`
  padding: 16px;
  background-color: ${e=>{let{status:t}=e;return t===f.Error?"#f5dfe0":"#f1fff3"}};
  color: ${e=>{let{status:t}=e;return t===f.Error?"#4c0e16":"#01480a"}};
`,V=e=>{let{result:t}=e,{status:r,message:i}=t;return(0,n.jsx)(R,{status:r,children:(0,n.jsx)(M.UG,{children:i})})},Z=function(){let e,[t,r]=(0,a.useState)(!1),[i,o]=(0,a.useState)({status:"",message:""}),[s,f]=(0,a.useState)({prompt:u.prompt,fileURL:"",schemaFile:u.schemaFile,targetFile:u.targetFile}),h=e=>t=>{f({...s,[e]:t})},y=async e=>{e.preventDefault(),r(!0),o(await E(s)),r(!1)};return(0,n.jsxs)(l.Z,{paddingY:2,children:[(0,n.jsx)("h1",{children:"OCR AI Tool"}),(0,n.jsx)("form",{style:{marginBottom:20},onSubmit:y,children:(0,n.jsxs)(p.Z,{sx:{display:"flex",gap:2},children:[(0,n.jsx)(c.Z,{required:!0,fullWidth:!0,multiline:!0,defaultValue:s.prompt,name:"prompt",label:"Prompt",onChange:(e="prompt",t=>{f({...s,[e]:t.target.value})})}),(0,n.jsx)(Y,{defaultValue:s.schemaFile,setFile:h("schemaFile")}),(0,n.jsx)(k,{defaultValue:s.targetFile,setFile:h("targetFile")}),(0,n.jsx)(d.Z,{variant:"contained",type:"submit",disabled:t,children:"Process"})]})}),t&&(0,n.jsx)(m.Z,{}),!t&&i.status&&(0,n.jsx)(V,{result:i})]})};o.createRoot(document.getElementById("root")).render((0,n.jsx)(a.StrictMode,{children:(0,n.jsx)(()=>(0,n.jsx)(s.Z,{children:(0,n.jsx)(Z,{})}),{})}))}},t={};function r(i){var n=t[i];if(void 0!==n)return n.exports;var a=t[i]={exports:{}};return e[i].call(a.exports,a,a.exports,r),a.exports}r.m=e,r.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return r.d(t,{a:t}),t},(()=>{var e,t=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__;r.t=function(i,n){if(1&n&&(i=this(i)),8&n||"object"==typeof i&&i&&(4&n&&i.__esModule||16&n&&"function"==typeof i.then))return i;var a=Object.create(null);r.r(a);var o={};e=e||[null,t({}),t([]),t(t)];for(var s=2&n&&i;"object"==typeof s&&!~e.indexOf(s);s=t(s))Object.getOwnPropertyNames(s).forEach(e=>{o[e]=()=>i[e]});return o.default=()=>i,r.d(a,o),a}})(),r.d=(e,t)=>{for(var i in t)r.o(t,i)&&!r.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},r.g=(()=>{if("object"==typeof globalThis)return globalThis;try{return this||Function("return this")()}catch(e){if("object"==typeof window)return window}})(),r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e=[];r.O=(t,i,n,a)=>{if(i){a=a||0;for(var o=e.length;o>0&&e[o-1][2]>a;o--)e[o]=e[o-1];e[o]=[i,n,a];return}for(var s=1/0,o=0;o<e.length;o++){for(var[i,n,a]=e[o],l=!0,p=0;p<i.length;p++)(!1&a||s>=a)&&Object.keys(r.O).every(e=>r.O[e](i[p]))?i.splice(p--,1):(l=!1,a<s&&(s=a));if(l){e.splice(o--,1);var c=n();void 0!==c&&(t=c)}}return t}})(),r.rv=()=>"1.3.1",(()=>{var e={980:0};r.O.j=t=>0===e[t];var t=(t,i)=>{var n,a,[o,s,l]=i,p=0;if(o.some(t=>0!==e[t])){for(n in s)r.o(s,n)&&(r.m[n]=s[n]);if(l)var c=l(r)}for(t&&t(i);p<o.length;p++)a=o[p],r.o(e,a)&&e[a]&&e[a][0](),e[a]=0;return r.O(c)},i=self.webpackChunkocr_ai_tool=self.webpackChunkocr_ai_tool||[];i.forEach(t.bind(null,0)),i.push=t.bind(null,i.push.bind(i))})(),r.ruid="bundler=rspack@1.3.1";var i=r.O(void 0,["361","489"],function(){return r(2918)});i=r.O(i)})();